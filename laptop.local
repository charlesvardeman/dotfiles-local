#!/bin/sh
brew_is_installed() {
  brew list -1 | grep -Fqx "$1"
}

append_to_file() {
  # shellcheck disable=SC2039
  local file="$1"
  # shellcheck disable=SC2039
  local text="$2"

  if [ "$file" = "$HOME/.zshrc" ]; then
    if [ -w "$HOME/.zshrc.local" ]; then
      file="$HOME/.zshrc.local"
    else
      file="$HOME/.zshrc"
    fi
  elif [ "$file" = "$HOME/.bash_profile" ]; then
    file="$HOME/.bash_profile"
  fi

  if ! grep -qs "^$text$" "$file"; then
    printf "\n%s\n" "$text" >> "$file"
  fi



brew bundle --file=- <<EOF
brew "go"
brew "python3"
cask "ngrok"
brew "watch"
cask "caskroom/versions/java8"
cask "java"
brew "jenv"
brew "bazel"
brew "coreutils"
brew "ctags"
brew "editorconfig"
brew "fasd"
brew "fzf"
brew "git"
brew "htop"
brew "jena"
brew "kubernetes-cli"
brew "mosh"
brew "neovim"
brew "ripgrep"
brew "shellcheck"
brew "tmate"
brew "typescript"
brew "zeromq"
brew "zplug"
brew "zsh-completions"
cask "google-cloud-sdk"
EOF

fancy_echo 'Checking on Python installation...'

if ! brew_is_installed "python3"; then
  brew bundle --file=- <<EOF
  brew 'pyenv'
  brew 'pyenv-virtualenv'
  brew 'pyenv-virtualenvwrapper'
EOF


# shellcheck disable=SC2016
  append_to_file "$shell_file" 'if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi'
  # shellcheck disable=SC2016
  append_to_file "$shell_file" 'if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi'

  # pyenv currently doesn't have a convenience version to use, e.g., "latest",
  # so we check for the latest version against Homebrew instead.
  latest_python_3="$(brew info python3 | egrep -o "3\.\d+\.\d+" | head -1)"

  if ! pyenv versions | ag "$latest_python_3" > /dev/null; then
    pyenv install "$latest_python_3"
    pyenv global "$latest_python_3"
    pyenv rehash
  fi
else
  brew bundle --file=- <<EOF
  brew 'python3'
EOF
fi

if ! brew_is_installed "pyenv-virtualenvwrapper"; then
  if ! pip3 list | ag "virtualenvwrapper" > /dev/null; then
    fancy_echo 'Installing virtualenvwrapper...'
    pip3 install virtualenvwrapper
    append_to_file "$shell_file" 'export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3'
    append_to_file "$shell_file" 'export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/bin/virtualenv'
    append_to_file "$shell_file" 'source /usr/local/bin/virtualenvwrapper.sh'
  fi
fi

fancy_echo '...Finished Python installation checks.'



fancy_echo "Cleaning up old Homebrew formulae ..."
brew cleanup
brew cask cleanup

if [ -r "$HOME/.rcrc" ]; then
  fancy_echo "Updating dotfiles ..."
  rcup
fi
